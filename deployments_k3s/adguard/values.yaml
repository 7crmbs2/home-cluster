---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/app-template-4.0.1/charts/other/app-template/values.schema.json
controllers:
  main:
    # annotations:
    #   # Since we don't link the config map here but use k8s-sidecar,
    #   # we have to tell stakater the config map it needs to monitor
    #   configmap.reloader.stakater.com/reload: *app
    pod:
      dnsConfig:
        options:
          - { name: ndots, value: "1" }
      securityContext:
        runAsNonRoot: false # Adguard doesn't support running as non-root
        # runAsUser: 65534
        # runAsGroup: 65534
        # fsGroup: 65534
        runAsUser: 0
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    # initContainers:
    #   init-config:
    #     image:
    #       repository: ghcr.io/kiwigrid/k8s-sidecar
    #       tag: 1.28.0@sha256:4166a019eeafd1f0fef4d867dc5f224f18d84ec8681dbb31f3ca258ecf07bcf2
    #     env:
    #       FOLDER: /opt/adguardhome/conf
    #       LABEL: app.kubernetes.io/config-owner
    #       # LABEL_VALUE: *app
    #       UNIQUE_FILENAMES: false
    #       METHOD: LIST
    #     resources:
    #       requests:
    #         cpu: 10m
    #         memory: 10Mi
    #       limits:
    #         memory: 128Mi
    containers:
      main:
        image:
          repository: adguard/adguardhome
          tag: v0.107.54@sha256:ec59d9d8d083b74620f827879bee7ad88621f96bc0c4347c84c176ffa349484c
          pullPolicy: IfNotPresent
        env:
          TZ: UTC
        probes:
          liveness:
            enabled: true
            custom: false
            type: TCP
          # readiness: *probes
        resources:
          requests:
            cpu: 10m
            memory: 256M
          limits:
            memory: 512M
        # TODO: [adguard] Add service monitors
      # config-sync:
      #   image: *configSyncImage
      #   env:
      #     FOLDER: /opt/adguardhome/conf
      #     LABEL: app.kubernetes.io/config-owner
      #     LABEL_VALUE: *app
      #     UNIQUE_FILENAMES: false
      #     METHOD: WATCH
      #   resources: *configSyncResources
service:
  main:
    controller: main
    type: LoadBalancer
    externalTrafficPolicy: Local
    annotations:
      external-dns.alpha.kubernetes.io/hostname: "dns.local"
    ports:
      http:
        enabled: true
        port: 80
        protocol: TCP
        targetPort: 80
      dns-tcp:
        enabled: true
        port: 53
        protocol: TCP
        targetPort: 53
      dns-udp:
        enabled: true
        port: 53
        protocol: UDP
        targetPort: 53
      dns-tcp-tls:
        enabled: true
        port: 853
        protocol: TCP
        targetPort: 853
ingress:
  main:
    enabled: true
    annotations:
      ## Enable Oauth2 Authentication
      # nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.security.svc.cluster.local:4180/oauth2/auth"
      # nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}/oauth2/auth/oauth2/start?rd=$scheme://$host$request_uri"
      ##
      gethomepage.dev/enabled: "true"
      gethomepage.dev/description: "DNS Ad-Blocking"
      gethomepage.dev/group: Network
      gethomepage.dev/icon: adguard-home.svg
      gethomepage.dev/name: AdGuard
      # gethomepage.dev/widget.type: 
      gethomepage.dev/widget.url: http://adguard.network.svc.cluster.local:80
    hosts:
      - host: adguard.local
        paths:
          - path: /
            service:
              identifier: main
              port: http
    # tls:
    #  - hosts:
    #      - *host

# Required for the config sync init container
# serviceAccount:
#   create: true
#   name: adguard

persistence:
  config-work:
    storageClass: nfs-client
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /opt/adguardhome/work
  config-conf:
    storageClass: nfs-client
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /opt/adguardhome/conf
