authentik:
  authentik:
    secret_key: "argocdchange_50charKey"
    # This sends anonymous usage-data, stack traces on errors and
    # performance data to sentry.io, and is fully opt-in
    error_reporting:
      enabled: true
    postgresql:
      password: "argocdchange_PQPW"
    # email:
    #   # -- SMTP Server emails are sent from, fully optional
    #   host: "smtp.servivum.com"
    #   # -- SMTP server port
    #   port: 587
    #   # -- SMTP credentials, when left empty, no authentication will be done
    #   username: "noreply@diluzio.dev"
    #   # -- SMTP credentials, when left empty, no authentication will be done
    #   password: "TODO_EMAIL_PASSWORD"
    #   # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    #   use_tls: true
    #   # -- Enable either use_tls or use_ssl, they can't be enabled at the same time.
    #   use_ssl: false
    #   # -- Connection timeout
    #   timeout: 30
    #   # -- Email from address, can either be in the format "foo@bar.baz" or "authentik <foo@bar.baz>"
    #   from: "auth.cluster.diluz.io <noreply@diluzio.dev>"
    server:
      resources:
        requests:
          cpu: 200m
          memory: 128Mi
    worker:
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
    #  affinity:
    #    nodeAffinity:
    #      preferredDuringSchedulingIgnoredDuringExecution:
    #        - weight: 1
    #          preference:
    #            matchExpressions:
    #              - key: kubernetes.io/role
    #                operator: In
    #                values:
    #                  - worker
  server:
    ingress:
      # -- enable an ingress resource for the authentik server
      enabled: true
      # -- additional ingress annotations
      annotations:
        kubernetes.io/ingress.class: traefik
      # -- additional ingress labels
      labels: {}
      # -- defines which ingress controller will implement the resource
      ingressClassName: "traefik"
      # -- List of ingress hosts
      hosts:
        # - authentik.domain.tld
        - authentik.cluster

      # -- List of ingress paths
      paths:
        - "{{ .Values.authentik.web.path }}"
      # -- Ingress path type. One of `Exact`, `Prefix` or `ImplementationSpecific`
      pathType: Prefix
      # -- additional ingress paths
      extraPaths: []
        # - path: /*
        #   pathType: Prefix
        #   backend:
        #     service:
        #       name: ssl-redirect
        #       port:
        #         name: use-annotation

      # -- ingress TLS configuration
      tls: []
        # - secretName: authentik-tls
        #   hosts:
        #     - authentik.domain.tld

      # -- uses `server.service.servicePortHttps` instead of `server.service.servicePortHttp`
      https: false

  postgresql:
    enabled: true
    auth:
      password: "argocdchange_PQPW"
    primary:
      persistence:
        enabled: true
        storageClass: nfs-client
        accessMode: ReadWriteOnce
        size: 20Gi
      startupProbe:
        enabled: true
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kubernetes.io/role
                    operator: In
                    values:
                      - worker
  redis:
    enabled: true
    master:
      persistence:
        enabled: false
